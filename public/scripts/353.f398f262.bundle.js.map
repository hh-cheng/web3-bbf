{"version":3,"file":"scripts/353.f398f262.bundle.js","mappings":"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","sources":["webpack://web3-spa/./src/lib/hooks/useRedPocketContract.ts","webpack://web3-spa/./src/pages/DApp.tsx"],"sourcesContent":["'use client'\nimport { toast } from 'sonner'\nimport { useMemo } from 'react'\nimport { ethers, type BrowserProvider, type JsonRpcSigner } from 'ethers'\n\nimport { useWalletStore } from '@/stores/wallet'\n\n// Minimal ABI for RedPocket features we use\nconst RED_POCKET_ABI = [\n  'function provider() view returns (address)',\n  'function totalAmount() view returns (uint256)',\n  'function count() view returns (uint256)',\n  'function claimedCount() view returns (uint256)',\n  'function isEqual() view returns (bool)',\n  'function getBalance() view returns (uint256)',\n  'function getRemainingCount() view returns (uint256)',\n  'function redPocketMap(address) view returns (uint256)',\n  'function deposit() payable',\n  'function grabRedPocket()',\n  'function refund()',\n  'function emergencyStop()',\n  'event RedPocketCreated(address indexed provider, uint256 amount, uint256 count, bool isEqual)',\n  'event RedPocketClaimed(address indexed claimer, uint256 amount)',\n  'event RedPocketFinished(uint256 remainingAmount)',\n  'event RedPocketRefunded(uint256 amount)',\n]\n\ntype RedPocketSummary = {\n  provider: string\n  totalAmount: bigint\n  count: bigint\n  claimedCount: bigint\n  isEqual: boolean\n  balance: bigint\n  remainingCount: bigint\n}\n\nexport default function useRedPocketContract() {\n  const { provider, signer } = useWalletStore()\n\n  const contractAddress = process.env.CONTRACT_ADDRESS || ''\n\n  const contract: any | null = useMemo(() => {\n    try {\n      const rpc: BrowserProvider | JsonRpcSigner | null = signer || provider\n      if (!rpc || !contractAddress) return null\n      return new ethers.Contract(contractAddress, RED_POCKET_ABI, rpc)\n    } catch (err) {\n      console.error('创建合约实例失败', err)\n      return null\n    }\n  }, [provider, signer, contractAddress])\n\n  const ensureSigner = (): any | null => {\n    if (!contract) {\n      toast.error('合约未就绪，稍后重试')\n      return null\n    }\n    // When signer exists, ethers returns a Contract already connected to signer\n    if (!signer) {\n      toast.error('需要连接钱包才能执行此操作')\n      return null\n    }\n    return contract.connect(signer) as any\n  }\n\n  // --- Reads ---\n  const getSummary = async (): Promise<RedPocketSummary | null> => {\n    try {\n      if (!contract) return null\n      const [prov, total, cnt, claimed, eq, bal, remain] = await Promise.all([\n        contract.provider(),\n        contract.totalAmount(),\n        contract.count(),\n        contract.claimedCount(),\n        contract.isEqual(),\n        contract.getBalance(),\n        contract.getRemainingCount(),\n      ])\n      return {\n        provider: prov as string,\n        totalAmount: total as bigint,\n        count: cnt as bigint,\n        claimedCount: claimed as bigint,\n        isEqual: Boolean(eq),\n        balance: bal as bigint,\n        remainingCount: remain as bigint,\n      }\n    } catch (err) {\n      console.error('读取合约信息失败', err)\n      toast.error('读取合约信息失败')\n      return null\n    }\n  }\n\n  const getUserClaimedAmount = async (\n    address: string,\n  ): Promise<bigint | null> => {\n    try {\n      if (!contract) return null\n      const amount: bigint = await contract.redPocketMap(address)\n      return amount\n    } catch (err) {\n      console.error('读取用户红包金额失败', err)\n      toast.error('读取用户红包金额失败')\n      return null\n    }\n  }\n\n  // --- Writes ---\n  const deposit = async (valueWei: bigint) => {\n    const c = ensureSigner()\n    if (!c) return false\n    try {\n      const tx = await c.deposit({ value: valueWei })\n      await tx.wait()\n      toast.success('充值成功')\n      return true\n    } catch (err: any) {\n      console.error('充值失败', err)\n      toast.error(err?.message || '充值失败')\n      return false\n    }\n  }\n\n  const grabRedPocket = async () => {\n    const c = ensureSigner()\n    if (!c) return false\n    try {\n      const tx = await c.grabRedPocket()\n      await tx.wait()\n      toast.success('抢红包成功')\n      return true\n    } catch (err: any) {\n      console.error('抢红包失败', err)\n      toast.error(err?.message || '抢红包失败')\n      return false\n    }\n  }\n\n  const refund = async () => {\n    const c = ensureSigner()\n    if (!c) return false\n    try {\n      const tx = await c.refund()\n      await tx.wait()\n      toast.success('退款成功')\n      return true\n    } catch (err: any) {\n      console.error('退款失败', err)\n      toast.error(err?.message || '退款失败')\n      return false\n    }\n  }\n\n  const emergencyStop = async () => {\n    const c = ensureSigner()\n    if (!c) return false\n    try {\n      const tx = await c.emergencyStop()\n      await tx.wait()\n      toast.success('紧急停止已执行')\n      return true\n    } catch (err: any) {\n      console.error('紧急停止失败', err)\n      toast.error(err?.message || '紧急停止失败')\n      return false\n    }\n  }\n\n  return {\n    address: contractAddress,\n    contract,\n    getSummary,\n    getUserClaimedAmount,\n    deposit,\n    grabRedPocket,\n    refund,\n    emergencyStop,\n  }\n}\n","'use client'\nimport { useEffect, useState } from 'react'\n\nimport useWallet from '@/lib/hooks/useWallet'\nimport useRedPocketContract from '@/lib/hooks/useRedPocketContract'\n\nfunction formatEth(value: bigint | number | undefined) {\n  if (value === undefined) return '-'\n  try {\n    return `${Number(value) / 1e18}`\n  } catch {\n    return '-'\n  }\n}\n\nexport default function DApp() {\n  const { account, isConnected } = useWallet()\n  const {\n    address,\n    getSummary,\n    getUserClaimedAmount,\n    deposit,\n    grabRedPocket,\n    refund,\n    emergencyStop,\n  } = useRedPocketContract()\n\n  const [summary, setSummary] = useState<any>(null)\n  const [claimed, setClaimed] = useState<bigint | null>(null)\n  const [depositEth, setDepositEth] = useState('')\n  const canAct = isConnected && !!address\n\n  const refresh = async () => {\n    const s = await getSummary()\n    setSummary(s)\n    if (account) {\n      setClaimed(await getUserClaimedAmount(account))\n    } else {\n      setClaimed(null)\n    }\n  }\n\n  useEffect(() => {\n    void refresh()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, address])\n\n  const onDeposit = async () => {\n    if (!depositEth) return\n    const wei = BigInt(Math.floor(Number(depositEth) * 1e18))\n    const ok = await deposit(wei)\n    if (ok) {\n      setDepositEth('')\n      void refresh()\n    }\n  }\n\n  const onGrab = async () => {\n    const ok = await grabRedPocket()\n    if (ok) void refresh()\n  }\n  const onRefund = async () => {\n    const ok = await refund()\n    if (ok) void refresh()\n  }\n  const onEmergency = async () => {\n    const ok = await emergencyStop()\n    if (ok) void refresh()\n  }\n\n  return (\n    <section className=\"p-4 flex flex-col gap-6\">\n      <div className=\"contract rounded border p-4\">\n        <div className=\"mb-3 text-sm text-gray-600\">\n          合约地址: <span className=\"font-mono\">{address || '-'}</span>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-2 text-sm\">\n          <div>主体 provider: {summary?.provider || '-'}</div>\n          <div>总金额(ETH): {formatEth(summary?.totalAmount)}</div>\n          <div>红包数量: {summary?.count?.toString?.() || '-'}</div>\n          <div>已抢数量: {summary?.claimedCount?.toString?.() || '-'}</div>\n          <div>是否均分: {summary?.isEqual ? '是' : '否'}</div>\n          <div>合约余额(ETH): {formatEth(summary?.balance)}</div>\n          <div>剩余数量: {summary?.remainingCount?.toString?.() || '-'}</div>\n          <div>我已领(ETH): {claimed != null ? formatEth(claimed) : '-'}</div>\n        </div>\n\n        <div className=\"mt-4 flex items-center gap-2\">\n          <input\n            className=\"border rounded px-2 py-1 w-40\"\n            placeholder=\"充值 ETH\"\n            value={depositEth}\n            onChange={(e) => setDepositEth(e.target.value)}\n          />\n          <button\n            disabled={!canAct}\n            onClick={onDeposit}\n            className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50 disabled:cursor-not-allowed hover:bg-blue-700 transition-colors\"\n          >\n            充值\n          </button>\n\n          <div className=\"flex-1\" />\n\n          <button\n            disabled={!canAct}\n            onClick={onGrab}\n            className=\"px-4 py-2 rounded bg-green-600 text-white disabled:opacity-50 disabled:cursor-not-allowed hover:bg-green-700 transition-colors\"\n          >\n            抢红包\n          </button>\n          {summary?.provider === account && (\n            <>\n              <button\n                disabled={!canAct}\n                onClick={onRefund}\n                className=\"px-4 py-2 rounded bg-amber-600 text-white disabled:opacity-50 disabled:cursor-not-allowed hover:bg-amber-700 transition-colors\"\n              >\n                退款\n              </button>\n              <button\n                disabled={!canAct}\n                onClick={onEmergency}\n                className=\"px-4 py-2 rounded border border-white/20 text-white hover:bg-white/10 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                紧急停止\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    </section>\n  )\n}\n"],"names":["RED_POCKET_ABI","formatEth","value","undefined","Number","DApp","account","isConnected","useWallet","address","getSummary","getUserClaimedAmount","deposit","grabRedPocket","refund","emergencyStop","provider","signer","useWalletStore","contractAddress","process","contract","useMemo","rpc","ethers","err","console","error","ensureSigner","connect","toast","async","prov","total","cnt","claimed","eq","bal","remain","Promise","all","totalAmount","count","claimedCount","isEqual","getBalance","getRemainingCount","Boolean","balance","remainingCount","redPocketMap","valueWei","c","tx","wait","success","message","useRedPocketContract","summary","setSummary","useState","setClaimed","depositEth","setDepositEth","canAct","refresh","s","useEffect","section","className","div","span","toString","input","placeholder","onChange","e","target","button","disabled","onClick","wei","BigInt","Math","floor"],"sourceRoot":""}